{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport Colors from \"../constants/colors\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber('');\n  }\n\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number!', 'Number has to be a number between 1 and 99.', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  return _jsxs(View, {\n    style: styles.rootContainer,\n    children: [_jsx(Title, {\n      children: \"Guess My Number\"\n    }), _jsxs(Card, {\n      children: [_jsx(InstructionText, {\n        children: \"Enter a Number\"\n      }), _jsx(TextInput, {\n        style: styles.numberInput,\n        maxLength: 2,\n        keyboardType: \"number-pad\",\n        autoCapitalize: \"none\",\n        autoCorrect: false,\n        onChangeText: numberInputHandler,\n        value: enteredNumber\n      }), _jsxs(View, {\n        style: styles.buttonsContainer,\n        children: [_jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: resetInputHandler,\n            children: \"Reset\"\n          })\n        }), _jsx(View, {\n          style: styles.buttonContainer,\n          children: _jsx(PrimaryButton, {\n            onPress: confirmInputHandler,\n            children: \"Confirm\"\n          })\n        })]\n      })]\n    })]\n  });\n}\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    marginTop: height < 400 ? 30 : 100,\n    alignItems: 'center'\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center'\n  },\n  buttonsContainer: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","PrimaryButton","Title","Colors","Card","InstructionText","StartGameScreen","onPickNumber","useWindowDimensions","width","height","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","styles","rootContainer","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","flex","marginTop","alignItems","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["/home/umair/Projects/React-Native/rn-app3/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from 'react';\nimport { TextInput, View, StyleSheet, Alert, Dimensions,useWindowDimensions } from 'react-native';\n\nimport PrimaryButton from '../components/ui/PrimaryButton';\nimport Title from '../components/ui/Title';\nimport Colors from '../constants/colors';\nimport Card from '../components/ui/Card';\nimport InstructionText from '../components/ui/InstructionText';\n\nfunction StartGameScreen({ onPickNumber }) {\n  const {width, height} = useWindowDimensions();\n\n  const [enteredNumber, setEnteredNumber] = useState('');\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber('');\n  }\n\n  // const screenHeight = Dimensions.get('window').height;\n  \n  function confirmInputHandler() {\n    const chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        'Invalid number!',\n        'Number has to be a number between 1 and 99.',\n        [{ text: 'Okay', style: 'destructive', onPress: resetInputHandler }]\n      );\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  return (\n    <View style={styles.rootContainer}>\n      <Title>Guess My Number</Title>\n      <Card>\n        <InstructionText>\n          Enter a Number\n        </InstructionText>\n        <TextInput\n          style={styles.numberInput}\n          maxLength={2}\n          keyboardType=\"number-pad\"\n          autoCapitalize=\"none\"\n          autoCorrect={false}\n          onChangeText={numberInputHandler}\n          value={enteredNumber}\n        />\n        <View style={styles.buttonsContainer}>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n          </View>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={confirmInputHandler}>Confirm</PrimaryButton>\n          </View>\n        </View>\n      </Card>\n    </View>\n  );\n}\n\nexport default StartGameScreen;\n\nconst styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    marginTop: height < 400 ? 30 : 100,\n    alignItems: 'center',\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  buttonsContainer: {\n    flexDirection: 'row',\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n});\n"],"mappings":";AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;;;;AAGA,OAAOC,aAAP;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,IAAP;AACA,OAAOC,eAAP;;;;AAEA,SAASC,eAAT,OAA2C;EAAA,IAAhBC,YAAgB,QAAhBA,YAAgB;;EACzC,2BAAwBC,mBAAmB,EAA3C;EAAA,IAAOC,KAAP,wBAAOA,KAAP;EAAA,IAAcC,MAAd,wBAAcA,MAAd;;EAEA,gBAA0CV,QAAQ,CAAC,EAAD,CAAlD;EAAA;EAAA,IAAOW,aAAP;EAAA,IAAsBC,gBAAtB;;EAEA,SAASC,kBAAT,CAA4BC,WAA5B,EAAyC;IACvCF,gBAAgB,CAACE,WAAD,CAAhB;EACD;;EAED,SAASC,iBAAT,GAA6B;IAC3BH,gBAAgB,CAAC,EAAD,CAAhB;EACD;;EAID,SAASI,mBAAT,GAA+B;IAC7B,IAAMC,YAAY,GAAGC,QAAQ,CAACP,aAAD,CAA7B;;IAEA,IAAIQ,KAAK,CAACF,YAAD,CAAL,IAAuBA,YAAY,IAAI,CAAvC,IAA4CA,YAAY,GAAG,EAA/D,EAAmE;MACjEG,KAAK,CAACC,KAAN,CACE,iBADF,EAEE,6CAFF,EAGE,CAAC;QAAEC,IAAI,EAAE,MAAR;QAAgBC,KAAK,EAAE,aAAvB;QAAsCC,OAAO,EAAET;MAA/C,CAAD,CAHF;MAKA;IACD;;IAEDR,YAAY,CAACU,YAAD,CAAZ;EACD;;EAED,OACE,MAAC,IAAD;IAAM,KAAK,EAAEQ,MAAM,CAACC,aAApB;IAAA,WACE,KAAC,KAAD;MAAA;IAAA,EADF,EAEE,MAAC,IAAD;MAAA,WACE,KAAC,eAAD;QAAA;MAAA,EADF,EAIE,KAAC,SAAD;QACE,KAAK,EAAED,MAAM,CAACE,WADhB;QAEE,SAAS,EAAE,CAFb;QAGE,YAAY,EAAC,YAHf;QAIE,cAAc,EAAC,MAJjB;QAKE,WAAW,EAAE,KALf;QAME,YAAY,EAAEd,kBANhB;QAOE,KAAK,EAAEF;MAPT,EAJF,EAaE,MAAC,IAAD;QAAM,KAAK,EAAEc,MAAM,CAACG,gBAApB;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACI,eAApB;UAAA,UACE,KAAC,aAAD;YAAe,OAAO,EAAEd,iBAAxB;YAAA;UAAA;QADF,EADF,EAIE,KAAC,IAAD;UAAM,KAAK,EAAEU,MAAM,CAACI,eAApB;UAAA,UACE,KAAC,aAAD;YAAe,OAAO,EAAEb,mBAAxB;YAAA;UAAA;QADF,EAJF;MAAA,EAbF;IAAA,EAFF;EAAA,EADF;AA2BD;;AAED,eAAeV,eAAf;AAEA,IAAMmB,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BL,aAAa,EAAE;IACbM,IAAI,EAAE,CADO;IAEbC,SAAS,EAAEvB,MAAM,GAAG,GAAT,GAAe,EAAf,GAAoB,GAFlB;IAGbwB,UAAU,EAAE;EAHC,CADgB;EAM/BP,WAAW,EAAE;IACXjB,MAAM,EAAE,EADG;IAEXD,KAAK,EAAE,EAFI;IAGX0B,QAAQ,EAAE,EAHC;IAIXC,iBAAiB,EAAEjC,MAAM,CAACkC,SAJf;IAKXC,iBAAiB,EAAE,CALR;IAMXC,KAAK,EAAEpC,MAAM,CAACkC,SANH;IAOXG,cAAc,EAAE,CAPL;IAQXC,UAAU,EAAE,MARD;IASXC,SAAS,EAAE;EATA,CANkB;EAiB/Bd,gBAAgB,EAAE;IAChBe,aAAa,EAAE;EADC,CAjBa;EAoB/Bd,eAAe,EAAE;IACfG,IAAI,EAAE;EADS;AApBc,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}