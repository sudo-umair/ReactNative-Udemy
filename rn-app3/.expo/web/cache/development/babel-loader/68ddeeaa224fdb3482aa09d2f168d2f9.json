{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from \"react\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport Colors from \"../constants/colors\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction StartGameScreen(_ref) {\n  var onPickNumber = _ref.onPickNumber;\n\n  var _useWindowDimensions = useWindowDimensions(),\n      width = _useWindowDimensions.width,\n      height = _useWindowDimensions.height;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredNumber = _useState2[0],\n      setEnteredNumber = _useState2[1];\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber(\"\");\n  }\n\n  function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\"Invalid number!\", \"Number has to be a number between 1 and 99.\", [{\n        text: \"Okay\",\n        style: \"destructive\",\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  var marginTopDistance = height < 680 ? 30 : 100;\n  return _jsx(KeyboardAvoidingView, {\n    children: _jsxs(View, {\n      style: [styles.rootContainer, {\n        marginTop: marginTopDistance\n      }],\n      children: [_jsx(Title, {\n        children: \"Guess My Number\"\n      }), _jsxs(Card, {\n        children: [_jsx(InstructionText, {\n          children: \"Enter a Number\"\n        }), _jsx(TextInput, {\n          style: styles.numberInput,\n          maxLength: 2,\n          keyboardType: \"number-pad\",\n          autoCapitalize: \"none\",\n          autoCorrect: false,\n          onChangeText: numberInputHandler,\n          value: enteredNumber\n        }), _jsxs(View, {\n          style: styles.buttonsContainer,\n          children: [_jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(PrimaryButton, {\n              onPress: resetInputHandler,\n              children: \"Reset\"\n            })\n          }), _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(PrimaryButton, {\n              onPress: confirmInputHandler,\n              children: \"Confirm\"\n            })\n          })]\n        })]\n      })]\n    })\n  });\n}\n\nexport default StartGameScreen;\nvar styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["useState","PrimaryButton","Title","Colors","Card","InstructionText","StartGameScreen","onPickNumber","useWindowDimensions","width","height","enteredNumber","setEnteredNumber","numberInputHandler","enteredText","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","marginTopDistance","styles","rootContainer","marginTop","numberInput","buttonsContainer","buttonContainer","StyleSheet","create","flex","alignItems","fontSize","borderBottomColor","accent500","borderBottomWidth","color","marginVertical","fontWeight","textAlign","flexDirection"],"sources":["/home/umair/Projects/React-Native/rn-app3/screens/StartGameScreen.js"],"sourcesContent":["import { useState } from \"react\";\nimport {\n  TextInput,\n  View,\n  StyleSheet,\n  Alert,\n  Dimensions,\n  useWindowDimensions,\n  KeyboardAvoidingView,\n} from \"react-native\";\n\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport Colors from \"../constants/colors\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\n\nfunction StartGameScreen({ onPickNumber }) {\n  const { width, height } = useWindowDimensions();\n\n  const [enteredNumber, setEnteredNumber] = useState(\"\");\n\n  function numberInputHandler(enteredText) {\n    setEnteredNumber(enteredText);\n  }\n\n  function resetInputHandler() {\n    setEnteredNumber(\"\");\n  }\n\n  // const screenHeight = Dimensions.get('window').height;\n\n  function confirmInputHandler() {\n    const chosenNumber = parseInt(enteredNumber);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert(\n        \"Invalid number!\",\n        \"Number has to be a number between 1 and 99.\",\n        [{ text: \"Okay\", style: \"destructive\", onPress: resetInputHandler }]\n      );\n      return;\n    }\n\n    onPickNumber(chosenNumber);\n  }\n\n  const marginTopDistance = height < 680 ? 30 : 100;\n\n  return (\n    <KeyboardAvoidingView>\n      <View style={[styles.rootContainer, { marginTop: marginTopDistance }]}>\n        <Title>Guess My Number</Title>\n        <Card>\n          <InstructionText>Enter a Number</InstructionText>\n          <TextInput\n            style={styles.numberInput}\n            maxLength={2}\n            keyboardType=\"number-pad\"\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n            onChangeText={numberInputHandler}\n            value={enteredNumber}\n          />\n          <View style={styles.buttonsContainer}>\n            <View style={styles.buttonContainer}>\n              <PrimaryButton onPress={resetInputHandler}>Reset</PrimaryButton>\n            </View>\n            <View style={styles.buttonContainer}>\n              <PrimaryButton onPress={confirmInputHandler}>\n                Confirm\n              </PrimaryButton>\n            </View>\n          </View>\n        </Card>\n      </View>\n    </KeyboardAvoidingView>\n  );\n}\n\nexport default StartGameScreen;\n\nconst styles = StyleSheet.create({\n  rootContainer: {\n    flex: 1,\n    // marginTop: marginTopDistance,\n    alignItems: \"center\",\n  },\n  numberInput: {\n    height: 50,\n    width: 50,\n    fontSize: 32,\n    borderBottomColor: Colors.accent500,\n    borderBottomWidth: 2,\n    color: Colors.accent500,\n    marginVertical: 8,\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}