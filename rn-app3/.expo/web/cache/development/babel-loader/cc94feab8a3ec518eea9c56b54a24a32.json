{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nvar minBoundary = 1;\nvar maxBoundary = 100;\n\nfunction GameScreen(_ref) {\n  var userNumber = _ref.userNumber,\n      onGameOver = _ref.onGameOver;\n  var initialGuess = generateRandomBetween(1, 100, userNumber);\n\n  var _useState = useState(initialGuess),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var _useState3 = useState([initialGuess]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      guessRounds = _useState4[0],\n      setGuessRounds = _useState4[1];\n\n  useEffect(function () {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n  useEffect(function () {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n\n  function nextGuessHandler(direction) {\n    if (direction === \"lower\" && currentGuess < userNumber || direction === \"greater\" && currentGuess > userNumber) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [{\n        text: \"Sorry!\",\n        style: \"cancel\"\n      }]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    var newRndNumber = generateRandomBetween(minBoundary, maxBoundary, currentGuess);\n    setCurrentGuess(newRndNumber);\n    setGuessRounds(function (prevGuessRounds) {\n      return [newRndNumber].concat(_toConsumableArray(prevGuessRounds));\n    });\n  }\n\n  var guessRoundsListLength = guessRounds.length;\n  return _jsx(ScrollView, {\n    children: _jsxs(View, {\n      style: styles.screen,\n      children: [_jsx(Title, {\n        children: \"Opponent's Guess\"\n      }), _jsx(NumberContainer, {\n        children: currentGuess\n      }), _jsxs(Card, {\n        children: [_jsx(InstructionText, {\n          style: styles.instructionText,\n          children: \"Higher or lower?\"\n        }), _jsxs(View, {\n          style: styles.buttonsContainer,\n          children: [_jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(PrimaryButton, {\n              onPress: nextGuessHandler.bind(this, \"lower\"),\n              children: _jsx(Ionicons, {\n                name: \"md-remove\",\n                size: 24,\n                color: \"white\"\n              })\n            })\n          }), _jsx(View, {\n            style: styles.buttonContainer,\n            children: _jsx(PrimaryButton, {\n              onPress: nextGuessHandler.bind(this, \"greater\"),\n              children: _jsx(Ionicons, {\n                name: \"md-add\",\n                size: 24,\n                color: \"white\"\n              })\n            })\n          })]\n        })]\n      }), _jsx(View, {\n        style: styles.listContainer,\n        children: _jsx(FlatList, {\n          data: guessRounds,\n          renderItem: function renderItem(itemData) {\n            return _jsx(GuessLogItem, {\n              roundNumber: guessRoundsListLength - itemData.index,\n              guess: itemData.item\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item;\n          }\n        })\n      })]\n    })\n  });\n}\n\nexport default GameScreen;\nvar styles = StyleSheet.create({\n  screen: {\n    alignItems: \"center\",\n    flex: 1,\n    padding: 24\n  },\n  instructionText: {\n    marginBottom: 12\n  },\n  buttonsContainer: {\n    flexDirection: \"row\"\n  },\n  buttonContainer: {\n    flex: 1\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16\n  }\n});","map":{"version":3,"names":["useState","useEffect","Ionicons","NumberContainer","Card","InstructionText","PrimaryButton","Title","GuessLogItem","generateRandomBetween","min","max","exclude","rndNum","Math","floor","random","minBoundary","maxBoundary","GameScreen","userNumber","onGameOver","initialGuess","currentGuess","setCurrentGuess","guessRounds","setGuessRounds","length","nextGuessHandler","direction","Alert","alert","text","style","newRndNumber","prevGuessRounds","guessRoundsListLength","styles","screen","instructionText","buttonsContainer","buttonContainer","bind","listContainer","itemData","index","item","StyleSheet","create","alignItems","flex","padding","marginBottom","flexDirection"],"sources":["/home/umair/Projects/React-Native/rn-app3/screens/GameScreen.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { View, StyleSheet, Alert, Text, ScrollView, FlatList } from \"react-native\";\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport NumberContainer from \"../components/game/NumberContainer\";\nimport Card from \"../components/ui/Card\";\nimport InstructionText from \"../components/ui/InstructionText\";\nimport PrimaryButton from \"../components/ui/PrimaryButton\";\nimport Title from \"../components/ui/Title\";\nimport GuessLogItem from \"../components/game/GuessLogItem\";\n\nfunction generateRandomBetween(min, max, exclude) {\n  const rndNum = Math.floor(Math.random() * (max - min)) + min;\n\n  if (rndNum === exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return rndNum;\n  }\n}\n\nlet minBoundary = 1;\nlet maxBoundary = 100;\n\nfunction GameScreen({ userNumber, onGameOver }) {\n  const initialGuess = generateRandomBetween(1, 100, userNumber);\n  const [currentGuess, setCurrentGuess] = useState(initialGuess);\n  const [guessRounds, setGuessRounds] = useState([initialGuess]);\n\n  useEffect(() => {\n    if (currentGuess === userNumber) {\n      onGameOver(guessRounds.length);\n    }\n  }, [currentGuess, userNumber, onGameOver]);\n\n  useEffect(() => {\n    minBoundary = 1;\n    maxBoundary = 100;\n  }, []);\n\n  function nextGuessHandler(direction) {\n    // direction => 'lower', 'greater'\n    if (\n      (direction === \"lower\" && currentGuess < userNumber) ||\n      (direction === \"greater\" && currentGuess > userNumber)\n    ) {\n      Alert.alert(\"Don't lie!\", \"You know that this is wrong...\", [\n        { text: \"Sorry!\", style: \"cancel\" },\n      ]);\n      return;\n    }\n\n    if (direction === \"lower\") {\n      maxBoundary = currentGuess;\n    } else {\n      minBoundary = currentGuess + 1;\n    }\n\n    const newRndNumber = generateRandomBetween(\n      minBoundary,\n      maxBoundary,\n      currentGuess\n    );\n    setCurrentGuess(newRndNumber);\n    setGuessRounds((prevGuessRounds) => [newRndNumber, ...prevGuessRounds]);\n  }\n\n  const guessRoundsListLength = guessRounds.length;\n\n  return (\n    <ScrollView>\n\n    <View style={styles.screen}>\n      <Title>Opponent's Guess</Title>\n      <NumberContainer>{currentGuess}</NumberContainer>\n      <Card>\n        <InstructionText style={styles.instructionText}>\n          Higher or lower?\n        </InstructionText>\n        <View style={styles.buttonsContainer}>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"lower\")}>\n              <Ionicons name=\"md-remove\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n          <View style={styles.buttonContainer}>\n            <PrimaryButton onPress={nextGuessHandler.bind(this, \"greater\")}>\n              <Ionicons name=\"md-add\" size={24} color=\"white\" />\n            </PrimaryButton>\n          </View>\n        </View>\n      </Card>\n      <View style={styles.listContainer}>\n        {/* {guessRounds.map(guessRound => <Text key={guessRound}>{guessRound}</Text>)} */}\n        <FlatList\n          data={guessRounds}\n          renderItem={(itemData) => (\n            <GuessLogItem\n            roundNumber={guessRoundsListLength - itemData.index}\n            guess={itemData.item}\n            />\n            )}\n          keyExtractor={(item) => item}\n        />\n      </View>\n    </View>\n            </ScrollView>\n  );\n}\n\nexport default GameScreen;\n\nconst styles = StyleSheet.create({\n  screen: {\n    alignItems: \"center\",\n    flex: 1,\n    padding: 24,\n  },\n  instructionText: {\n    marginBottom: 12,\n  },\n  buttonsContainer: {\n    flexDirection: \"row\",\n  },\n  buttonContainer: {\n    flex: 1,\n  },\n  listContainer: {\n    flex: 1,\n    padding: 16,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}