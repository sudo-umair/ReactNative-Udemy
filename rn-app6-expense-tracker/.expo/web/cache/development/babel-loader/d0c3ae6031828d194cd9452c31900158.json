{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { GlobalStyles } from \"../../constants/styles\";\nimport { getFormattedDate } from \"../../utilities/date\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ExpenseItem(_ref) {\n  var id = _ref.id,\n      description = _ref.description,\n      amount = _ref.amount,\n      date = _ref.date;\n  var navigation = useNavigation();\n\n  function pressHandler() {\n    navigation.navigate(\"ManageExpense\", {\n      id: id,\n      description: description,\n      amount: amount,\n      date: date\n    });\n  }\n\n  return _jsx(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return pressed && styles.pressed;\n    },\n    onPress: pressHandler,\n    children: _jsxs(View, {\n      style: styles.expenseItem,\n      children: [_jsxs(View, {\n        children: [_jsx(Text, {\n          style: [styles.textBase, styles.description],\n          children: description\n        }), _jsx(Text, {\n          style: styles.textBase,\n          children: getFormattedDate(date)\n        })]\n      }), _jsx(View, {\n        style: styles.amountContainer,\n        children: _jsxs(Text, {\n          style: styles.amount,\n          children: [\"$\", amount.toFixed(2)]\n        })\n      })]\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  pressed: {\n    opacity: 0.75\n  },\n  expenseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 6,\n    padding: 12,\n    marginVertical: 8,\n    backgroundColor: GlobalStyles.colors.primary500,\n    elevation: 4,\n    shadowColor: GlobalStyles.colors.gray500,\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 4\n  },\n  textBase: {\n    color: GlobalStyles.colors.primary50\n  },\n  description: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 4\n  },\n  amountContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    minWidth: 80\n  },\n  amount: {\n    color: GlobalStyles.colors.primary500,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"names":["React","useNavigation","GlobalStyles","getFormattedDate","ExpenseItem","id","description","amount","date","navigation","pressHandler","navigate","pressed","styles","expenseItem","textBase","amountContainer","toFixed","StyleSheet","create","opacity","flexDirection","justifyContent","borderRadius","padding","marginVertical","backgroundColor","colors","primary500","elevation","shadowColor","gray500","shadowOffset","width","height","shadowOpacity","shadowRadius","color","primary50","fontSize","fontWeight","marginBottom","paddingHorizontal","paddingVertical","alignItems","minWidth"],"sources":["/home/umair/Projects/React-Native/rn-app6-expense-tracker/components/ExpensesOutput/ExpenseItem.js"],"sourcesContent":["import { View, Text, Pressable, StyleSheet } from \"react-native\";\nimport React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\n\nimport { GlobalStyles } from \"../../constants/styles\";\nimport { getFormattedDate } from \"../../utilities/date\";\n\nexport default function ExpenseItem({ id, description, amount, date }) {\n  const navigation = useNavigation();\n\n  function pressHandler() {\n    navigation.navigate(\"ManageExpense\", {\n      id,\n      description,\n      amount,\n      date,\n    });\n  }\n\n  return (\n    <Pressable\n      style={({ pressed }) => pressed && styles.pressed}\n      onPress={pressHandler}\n    >\n      <View style={styles.expenseItem}>\n        <View>\n          <Text style={[styles.textBase, styles.description]}>\n            {description}\n          </Text>\n          <Text style={styles.textBase}>{getFormattedDate(date)}</Text>\n        </View>\n        <View style={styles.amountContainer}>\n          <Text style={styles.amount}>${amount.toFixed(2)}</Text>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  pressed: {\n    opacity: 0.75,\n  },\n  expenseItem: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    borderRadius: 6,\n    padding: 12,\n    marginVertical: 8,\n    backgroundColor: GlobalStyles.colors.primary500,\n    elevation: 4,\n\n    shadowColor: GlobalStyles.colors.gray500,\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity: 0.4,\n    shadowRadius: 4,\n  },\n  textBase: {\n    color: GlobalStyles.colors.primary50,\n  },\n  description: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    marginBottom: 4,\n  },\n  amountContainer: {\n    paddingHorizontal: 12,\n    paddingVertical: 4,\n    backgroundColor: \"white\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderRadius: 4,\n    minWidth: 80,\n  },\n  amount: {\n    color: GlobalStyles.colors.primary500,\n    fontWeight: \"bold\",\n  },\n});\n"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AAEA,SAASC,YAAT;AACA,SAASC,gBAAT;;;AAEA,eAAe,SAASC,WAAT,OAAwD;EAAA,IAAjCC,EAAiC,QAAjCA,EAAiC;EAAA,IAA7BC,WAA6B,QAA7BA,WAA6B;EAAA,IAAhBC,MAAgB,QAAhBA,MAAgB;EAAA,IAARC,IAAQ,QAARA,IAAQ;EACrE,IAAMC,UAAU,GAAGR,aAAa,EAAhC;;EAEA,SAASS,YAAT,GAAwB;IACtBD,UAAU,CAACE,QAAX,CAAoB,eAApB,EAAqC;MACnCN,EAAE,EAAFA,EADmC;MAEnCC,WAAW,EAAXA,WAFmC;MAGnCC,MAAM,EAANA,MAHmC;MAInCC,IAAI,EAAJA;IAJmC,CAArC;EAMD;;EAED,OACE,KAAC,SAAD;IACE,KAAK,EAAE;MAAA,IAAGI,OAAH,SAAGA,OAAH;MAAA,OAAiBA,OAAO,IAAIC,MAAM,CAACD,OAAnC;IAAA,CADT;IAEE,OAAO,EAAEF,YAFX;IAAA,UAIE,MAAC,IAAD;MAAM,KAAK,EAAEG,MAAM,CAACC,WAApB;MAAA,WACE,MAAC,IAAD;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAACD,MAAM,CAACE,QAAR,EAAkBF,MAAM,CAACP,WAAzB,CAAb;UAAA,UACGA;QADH,EADF,EAIE,KAAC,IAAD;UAAM,KAAK,EAAEO,MAAM,CAACE,QAApB;UAAA,UAA+BZ,gBAAgB,CAACK,IAAD;QAA/C,EAJF;MAAA,EADF,EAOE,KAAC,IAAD;QAAM,KAAK,EAAEK,MAAM,CAACG,eAApB;QAAA,UACE,MAAC,IAAD;UAAM,KAAK,EAAEH,MAAM,CAACN,MAApB;UAAA,gBAA8BA,MAAM,CAACU,OAAP,CAAe,CAAf,CAA9B;QAAA;MADF,EAPF;IAAA;EAJF,EADF;AAkBD;AAED,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;EAC/BP,OAAO,EAAE;IACPQ,OAAO,EAAE;EADF,CADsB;EAI/BN,WAAW,EAAE;IACXO,aAAa,EAAE,KADJ;IAEXC,cAAc,EAAE,eAFL;IAGXC,YAAY,EAAE,CAHH;IAIXC,OAAO,EAAE,EAJE;IAKXC,cAAc,EAAE,CALL;IAMXC,eAAe,EAAExB,YAAY,CAACyB,MAAb,CAAoBC,UAN1B;IAOXC,SAAS,EAAE,CAPA;IASXC,WAAW,EAAE5B,YAAY,CAACyB,MAAb,CAAoBI,OATtB;IAUXC,YAAY,EAAE;MAAEC,KAAK,EAAE,CAAT;MAAYC,MAAM,EAAE;IAApB,CAVH;IAWXC,aAAa,EAAE,GAXJ;IAYXC,YAAY,EAAE;EAZH,CAJkB;EAkB/BrB,QAAQ,EAAE;IACRsB,KAAK,EAAEnC,YAAY,CAACyB,MAAb,CAAoBW;EADnB,CAlBqB;EAqB/BhC,WAAW,EAAE;IACXiC,QAAQ,EAAE,EADC;IAEXC,UAAU,EAAE,MAFD;IAGXC,YAAY,EAAE;EAHH,CArBkB;EA0B/BzB,eAAe,EAAE;IACf0B,iBAAiB,EAAE,EADJ;IAEfC,eAAe,EAAE,CAFF;IAGfjB,eAAe,EAAE,OAHF;IAIfJ,cAAc,EAAE,QAJD;IAKfsB,UAAU,EAAE,QALG;IAMfrB,YAAY,EAAE,CANC;IAOfsB,QAAQ,EAAE;EAPK,CA1Bc;EAmC/BtC,MAAM,EAAE;IACN8B,KAAK,EAAEnC,YAAY,CAACyB,MAAb,CAAoBC,UADrB;IAENY,UAAU,EAAE;EAFN;AAnCuB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}